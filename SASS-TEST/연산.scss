//상대적 단위 연산
//일반적으론 절댓값을 나타내는 px단위로 연산을 하지만
///상대적단위(%, em, vw) 등의 연산은 CSS calc()로 연산해야함.
width: 50% - 20px; //dpfj
width: calc(50% - 20px); //연산가능



//나누기 기호 주의사항
//CSS에서는 /를 속성값 분리로 사용하기 때문에 나누기 연산자는 연산되지 않고 그대로 컴파일 됨
div{
    width: 40px + 20px;    //더하기
    height: 40px - 10px;    //빼기
    font-size: 10px * 2;    //곱하기
    margin: 30px / 2;   //나누기
}
/*
div{
    width: 40px;
    height: 30px;
    font-size: 20px;
    margin: 30px /  2;      <-error!
}
*/
//그렇다면 어떻게? 조건이 있다
/*
A값 또는 그 일부가 변수에 저장되거나 함수에 의해 반환되는 경우
B값이 ()로 묶여있는 경우
C값이 다른 산술 표현식의 일부로 사용되는 경우
div{
    $x : 100px;
    width: $x / 2;      //A변수에 저장된 값 나누기
    height: (100px / 2);    //B괄호로 묶어서 나누기
    font-size: 10px 12px / 3;   //C더하기 연산자와 같이 사용

*/









//문자 연산자엔 +가 사용
//문자 연산의 결과는 첫 번째 피연산자 기준
//첫 번째 피연산자에 따옴표가 붙어있으면 연산 결과를 따옴표로 묶고
//안붙어있으면 연산 결과도 따옴표 처리X
div::after{
    content: "Hello " + World;
    flex-flow: row + "-reverse" + " " + wrap    //" " 는 띄어쓰기 말하는 것
}
/*
div::after{
    content: "Hello World";
    flex-flowe: row-reverse wrap;
*/









//색상연산
color{
    color: #123456 + #345678;
    //0~9, a~f 16진수임
    //R: 12 + 34 = 46
    //G : 34 + 56 = 8a
    //B : 56 +  78 = ce
    background: rgba(50, 100, 150, .5) + rgba(10, 20, 330, .5); //alpha 즉 투명도 부분의 값이 동일해야 연산됨
    //R : 50 + 10 = 60
    //G : 100 + 20 = 120
    //B : 150 +  30 = 180
    //A : Alpha channels mush be equal
}
/*
div{
    color: $468ace;
    background" tgba(60, 120, 180, .5);
*/

//alpha값이 다를 때 연산
$color: rgba(10, 20, 30, .5);
div{
    color: opacify($color, .3); //30% 더 불투명하게 / 0.5 + 0.3
    background-color: transparentize($color, .2); //20% 더 투명하게 / 0.5 - 0.2
}
/*
div{
    color: rgba(19, 20, 30, 0.8);
    background-color: rgba(10, 20, 30, 0.3);
*/









//논리연산자
//Sass의 @if 조건문에서 사용되는 논리(boolean) 연산에선 '그리고', '또는', '부정(반대)'
//and or not
//자바스크립트에선 &&, ||, !

$w: 100px;
.item{
    display: block;
    @if not ($w < 50px){
        width: 400px;
    }
}
//not은 if 뒤에 쓰고 and랑 or은 조건 사이에 붙인다